{"version":3,"sources":["players/NoiseControl.js","players/index.js","components/IPCard.js","components/LaunchCount.js","App.js","reportWebVitals.js","index.js"],"names":["NoiseControl","props","state","playing","loaded","loop","mute","volume","seek","isSeeking","handleToggle","bind","handleOnLoad","handleOnEnd","handleOnPlay","handleStop","renderSeekPos","handleLoopToggle","handleMuteToggle","handleMouseDownSeek","handleMouseUpSeek","handleSeekingChange","this","clearRAF","setState","duration","player","stop","e","target","value","parseFloat","_raf","raf","cancel","className","src","onLoad","onPlay","onEnd","ref","class","type","min","max","step","onChange","variant","size","onClick","as","animation","role","aria-hidden","React","Component","require","default","IPCard","error","isLoaded","items","fetch","then","res","json","result","message","ip","LaunchCount","App","Container","fluid","Row","Col","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e49ffec6.chunk.js","sourcesContent":["import React from 'react'\nimport ReactHowler from 'react-howler'\nimport raf from 'raf' // requestAnimationFrame polyfill\nimport Button from 'react-bootstrap/Button'\nimport { Howl } from 'howler';\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass NoiseControl extends React.Component {\n  constructor (props) {\n    super(props)\n\n    // this.noise = new Howl({\n    //   src: [\"noise.mp3\"],\n    //   sprite: {\n    //     loop: [100, 2000, true]      \n    //   }\n    // })\n  \n\n    this.state = {\n      playing: false,\n      loaded: false,\n      loop: true,\n      mute: false,\n      volume: 0.15,\n      seek: 0.0,\n      isSeeking: false,\n    }\n\n    this.handleToggle = this.handleToggle.bind(this)\n    this.handleOnLoad = this.handleOnLoad.bind(this)\n    this.handleOnEnd = this.handleOnEnd.bind(this)\n    this.handleOnPlay = this.handleOnPlay.bind(this)\n    this.handleStop = this.handleStop.bind(this)\n    this.renderSeekPos = this.renderSeekPos.bind(this)\n    this.handleLoopToggle = this.handleLoopToggle.bind(this)\n    this.handleMuteToggle = this.handleMuteToggle.bind(this)\n    this.handleMouseDownSeek = this.handleMouseDownSeek.bind(this)\n    this.handleMouseUpSeek = this.handleMouseUpSeek.bind(this)\n    this.handleSeekingChange = this.handleSeekingChange.bind(this)\n\n    \n  }\n\n  componentWillUnmount () {\n    this.clearRAF()\n  }\n\n\n  handleToggle () {\n\n    this.setState({\n      playing: !this.state.playing\n    })\n  }\n\n  handleOnLoad () {\n    this.setState({\n      loaded: true,\n      duration: this.player.duration()\n    })\n  }\n\n  handleOnPlay () {\n    this.setState({\n      playing: true\n    })\n    this.renderSeekPos()\n  }\n\n  handleOnEnd () {\n    this.setState({\n      playing: false\n    })\n    this.clearRAF()\n  }\n\n  handleStop () {\n    this.player.stop()\n    this.setState({\n      playing: false // Need to update our local state so we don't immediately invoke autoplay\n    })\n    this.renderSeekPos()\n  }\n\n  handleLoopToggle () {\n    this.setState({\n      loop: !this.state.loop\n    })\n  }\n\n  handleMuteToggle () {\n    this.setState({\n      mute: !this.state.mute\n    })\n  }\n\n  handleMouseDownSeek () {\n    this.setState({\n      isSeeking: true\n    })\n  }\n\n  handleMouseUpSeek (e) {\n    this.setState({\n      isSeeking: false\n    })\n\n    this.player.seek(e.target.value)\n  }\n\n  handleSeekingChange (e) {\n    this.setState({\n      seek: parseFloat(e.target.value)\n    })\n  }\n\n  renderSeekPos () {\n    if (!this.state.isSeeking) {\n      this.setState({\n        seek: this.player.seek()\n      })\n    }\n    if (this.state.playing) {\n      this._raf = raf(this.renderSeekPos)\n    }\n  }\n\n  clearRAF () {\n    raf.cancel(this._raf)\n  }\n\n\n  render () {\n    return (\n      <div className='noise-control'>\n        <ReactHowler\n          src={['noise.mp3']}\n          playing={this.state.playing}\n          onLoad={this.handleOnLoad}\n          onPlay={this.handleOnPlay}\n          onEnd={this.handleOnEnd}\n          loop={this.state.loop}\n          mute={this.state.mute}\n          volume={this.state.volume}\n          ref={(ref) => (this.player = ref)}\n        />\n        \n        {this.state.loaded && \n        <div>\n          <div className='volume my-2'>\n            <label>\n              Volume:\n                <input\n                class='form-control-range input-lg'\n                  type='range'\n                  min='0'\n                  max='1'\n                  step='.01'\n                  value={this.state.volume}\n                  onChange={e => this.setState({ volume: parseFloat(e.target.value) })}\n                />\n            </label>\n          </div>\n          <Button variant=\"outline-primary\" size=\"lg\" onClick={this.handleToggle}>\n            {(this.state.playing) ? 'Stop Noise' : 'Start Noise'}\n          </Button>\n        </div>\n        }\n\n      {!this.state.loaded && \n           <Spinner\n          as=\"span\"\n          animation=\"border\"\n          size=\"lg\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n        }\n\n      </div>\n    )\n  }\n}\n\nexport default NoiseControl\n","export const NoiseControl = require('./NoiseControl').default\n","import React from 'react'\r\n\r\nclass IPCard extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch\r\n      (\"https://api.ipify.org/?format=json\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n  \r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n          <div className=\"mt-4\">Your IP is {items.ip}</div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  \r\nexport default IPCard;","import React from 'react'\r\n\r\nclass LaunchCount extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch\r\n      (\"https://api.countapi.xyz/hit/noisify/visits\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n  \r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n        <div className=\"mt-5\">Noisify has succesfully launched {items.value} times in history.</div>\r\n          \r\n\r\n          );\r\n      }\r\n    }\r\n  }\r\n  \r\nexport default LaunchCount;","import React from 'react'\nimport { NoiseControl } from './players'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport IPCard from './components/IPCard'\nimport LaunchCount from './components/LaunchCount'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Container className=\"bg-dark text-light\" fluid>\n        <Row >\n          <Col className=\"text-center\">\n            <h1 className='title my-3'>Noisify</h1>\n            <NoiseControl className=\"mt-3 mb-3\" />\n            <IPCard></IPCard>\n            <LaunchCount></LaunchCount>\n            <p className=\"mt-3\">A deep work tool made by <a href=\"https://focalise.ie\">Focalise</a></p>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}